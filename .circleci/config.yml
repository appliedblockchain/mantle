# Javascript Node CircleCI 2.0 configuration file
#
# References:
# https://circleci.com/docs/2.0/language-javascript/
# https://circleci.com/docs/2.0/configuration-reference/ 
# https://circleci.com/docs/2.0/caching/
# https://circleci.com/docs/2.0/circleci-images/

version: 2
jobs:
  build:
    docker:
    # Primary docker container
    - image: circleci/node:10.7

    working_directory: ~/mantle 

    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0

      - run:
          name: Authorize NPM
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      # Install ipfs and initialize
      - run: wget https://dist.ipfs.io/go-ipfs/v0.4.17/go-ipfs_v0.4.17_linux-amd64.tar.gz
      - run: tar xvfz go-ipfs_v0.4.17_linux-amd64.tar.gz
      - run: sudo cp go-ipfs/ipfs /usr/local/bin
      - run: ipfs init

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # Fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules
    
      - setup_remote_docker
      - run: docker login -u "$DOCKER_USER" -p "$DOCKER_PASSWORD"
      
    # Run ipfs daemon for ipfs API access and run tests
      - run:
          name: ipfs daemon
          command: ipfs daemon
          background: true

      - run:
          name: parity
          command: npm run parity
          background: true

      - run:
          name: api server
          command: npm run deploy
          background: true

      - run: dockerize -wait tcp://localhost:3000 -timeout 20s
      - run: sleep 20
      - run: docker ps
      - run: npm test
